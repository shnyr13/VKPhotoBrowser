ext.deps = [:]

def versions = [:]

versions.kotlin = "1.4.10"
versions.coroutines = "1.3.3"
versions.location = "17.0.0"
versions.material = "1.1.0"
versions.constraint_layout = "2.0.0"
versions.recyclerview = "1.1.0"
versions.work = "2.2.0"
versions.core_ktx = "1.3.0"

versions.lifecycle = "2.2.0"

versions.navigation = "2.2.0"

versions.dagger = "2.29"
versions.dagger_assisted_inject = "0.5.2"

versions.room = "2.2.4"

versions.stetho = "1.5.0"
versions.timber = "4.7.1"

versions.retrofit = "2.4.0"
versions.ok_http = "3.12.2"

versions.rx_java = "2.2.10"
versions.rx_android = "2.1.1"
versions.rx_binding = "3.1.0"

versions.picasso = "2.71828"

versions.maps_utils = "2.0.0"

versions.inputmask = "4.1.0"

versions.groupie = "2.8.0"

versions.insetter = "0.3.1"

versions.guava = "27.0.1-android"

versions.flexibledivider = "1.4.0"

versions.lottie = "3.4.1"

def junit5_version = "5.6.2"
def junit4_version = "4.13"

def mockito_core_version = "2.18.0"
def mockito_kotlin_version = "2.2.0"

def spek_version = "2.0.10"

def mockwebserver_version = "4.4.0"

def assertj_version = "3.15.0"

def junit5_android_version = "1.0.0"
def test_runner_version = "1.0.2"
def espresso_core_version = "3.0.2"


ext {

    testImpl = [
            // junit5
            junit_api = "org.junit.jupiter:junit-jupiter-api:$junit5_version",
            junit_params = "org.junit.jupiter:junit-jupiter-params:$junit5_version",
            junit_runner = "org.junit.platform:junit-platform-runner:1.6.1",
            junit_4 = "junit:junit:$junit4_version",

            // mockito
            mockito_core = "org.mockito:mockito-core:$mockito_core_version",
            mockito_kotlin = "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version",

            // spek
            spek = "org.spekframework.spek2:spek-dsl-jvm:$spek_version",
            spek_runner = "org.spekframework.spek2:spek-runner-junit5:$spek_version",

            mockwebserver = "com.squareup.okhttp3:mockwebserver:$mockwebserver_version",

            assertj = "org.assertj:assertj-core:$assertj_version",

            kotlin_reflect = "org.jetbrains.kotlin:kotlin-reflect:$versions.kotlin",
            kotlin_test ="org.jetbrains.kotlin:kotlin-test:$versions.kotlin"
    ]

    testRuntime = [
            // mockito
            mockito_core = "org.mockito:mockito-core:$mockito_core_version",
            mockito_kotlin = "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version",

            junit_jupiter = "org.junit.jupiter:junit-jupiter-engine:$junit5_version",
            junit_vintage = "org.junit.vintage:junit-vintage-engine:$junit5_version",
            // spek JUnit test engine
            spek_runner = "org.spekframework.spek2:spek-runner-junit5:$spek_version"
    ]

    androidTestImpl = [
            // mockito
            mockito_core = "org.mockito:mockito-core:$mockito_core_version",
            mockito_core = "org.mockito:mockito-android:$mockito_core_version",
            mockito_kotlin = "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version",

            mannodermaus_core = "de.mannodermaus.junit5:android-test-core:$junit5_android_version",
            espresso = "com.android.support.test.espresso:espresso-core:$espresso_core_version",
            test_core = "androidx.test:core:1.0.0",
            test_runner = "androidx.test:runner:1.1.0",
            test_rules = "androidx.test:rules:1.1.0",

            // junit
            junit_api = "org.junit.jupiter:junit-jupiter-api:$junit5_version",
            junit_params = "org.junit.jupiter:junit-jupiter-params:$junit5_version",
            junit_runner = "org.junit.platform:junit-platform-runner:1.6.1",

            junit_4 = "junit:junit:$junit4_version"


    ]

    androidTestRuntime = [
            mannodermaus_runner = "de.mannodermaus.junit5:android-test-runner:$junit5_android_version"
    ]
}

def playservices = [:]
playservices.location = "com.google.android.gms:play-services-location:$versions.location"
playservices.maps = "com.google.android.gms:play-services-maps:$versions.location"
playservices.maps_utils = "com.google.maps.android:android-maps-utils:$versions.maps_utils"
deps.playservices = playservices

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.coroutines = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutines"
kotlin.coroutines_android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutines"
kotlin.android_ktx = "androidx.core:core-ktx:$versions.core_ktx"
deps.kotlin = kotlin

def lifecycle = [:]
lifecycle.view_model = "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
deps.lifecycle = lifecycle

def material = [:]
material.material = "com.google.android.material:material:$versions.material"
deps.material = material

def constraint = [:]
constraint.constraint = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
deps.constraint = constraint

def recyclerview = [:]
recyclerview.recyclerview = "androidx.recyclerview:$versions.recyclerview"
deps.recyclerview = recyclerview

def navigation = [:]
navigation.fragment = "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
navigation.ui = "androidx.navigation:navigation-ui-ktx:$versions.navigation"
deps.navigation = navigation

def dagger = [:]
dagger.dagger = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.processor = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_processor = "com.google.dagger:dagger-android-processor:$versions.dagger"
dagger.assisted_inject = "com.squareup.inject:assisted-inject-annotations-dagger2:$versions.dagger_assisted_inject"
dagger.assisted_inject_processor = "com.squareup.inject:assisted-inject-processor-dagger2:$versions.dagger_assisted_inject"
deps.dagger = dagger

def room = [:]
room.room = "androidx.room:room-runtime:$versions.room"
room.processor = "androidx.room:room-compiler:$versions.room"
room.rxjava = "androidx.room:room-rxjava2:$versions.room"
deps.room = room

def tools = [:]
tools.timber = "com.jakewharton.timber:timber:$versions.timber"
tools.stetho = "com.facebook.stetho:stetho:$versions.stetho"
deps.tools = tools

def retrofit = [:]
retrofit.retrofit = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.retrofit_converter = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.retrofit_adapter_rx = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
deps.retrofit = retrofit

def ok_http = [:]
ok_http.ok_http = "com.squareup.okhttp3:logging-interceptor:$versions.ok_http"
deps.ok_http = ok_http

def rx_java = [:]
rx_java.rx_java = "io.reactivex.rxjava2:rxjava:$versions.rx_java"
rx_java.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
rx_java.rx_binding = "com.jakewharton.rxbinding3:rxbinding:$versions.rx_binding"
deps.rx_java = rx_java

def picasso = [:]
picasso.picasso = "com.squareup.picasso:picasso:$versions.picasso"
deps.picasso = picasso

def worker = [:]
worker.runtime = "androidx.work:work-runtime:$versions.work"
worker.rxjava = "androidx.work:work-rxjava2:$versions.work"
worker.testing = "androidx.work:work-testing:$versions.work"
deps.worker = worker

deps.inputmask = "com.redmadrobot:inputmask:$versions.inputmask"
deps.insetter = "dev.chrisbanes:insetter-ktx:$versions.insetter"
deps.lottie = "com.airbnb.android:lottie:$versions.lottie"

def groupie = [:]
groupie.groupie = "com.xwray:groupie:$versions.groupie"
groupie.groupie_ktx = "com.xwray:groupie-kotlin-android-extensions:$versions.groupie"
deps.groupie = groupie

deps.guava = "com.google.guava:guava:$versions.guava"

def recycler = [:]
deps.stickyheaders = "com.timehop.stickyheadersrecyclerview:library:0.4.3@aar"
deps.flexibledivider = "com.yqritc:recyclerview-flexibledivider:$versions.flexibledivider"
deps.recycler = recycler